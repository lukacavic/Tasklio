<?php

namespace App\Filament\Project\Resources;

use App\Filament\Project\Clusters\KnowledgeBase;
use App\Filament\Project\Resources\KnowledgeArticleResource\Pages;
use App\Filament\Project\Resources\KnowledgeCategoryResource\Pages\ViewKnowledgeArticle;
use App\Models\KnowledgeArticle;
use App\Models\KnowledgeCategory;
use Filament\Actions\DeleteAction;
use Filament\Facades\Filament;
use Filament\Forms\Components\Card;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Infolists\Infolist;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;
use Mohamedsabil83\FilamentFormsTinyeditor\Components\TinyEditor;

class KnowledgeArticleResource extends Resource
{
    protected static ?string $model = KnowledgeArticle::class;

    protected static ?string $navigationIcon = 'heroicon-o-book-open';

    protected static ?string $label = 'Članak';

    protected static ?string $pluralLabel = 'Članci';

    protected static ?string $cluster = KnowledgeBase::class;

    protected static ?string $recordTitleAttribute = 'title';

    public static function getGlobalSearchResultUrl(Model $record): string
    {
        return static::getUrl('view', ['record' => $record]);
    }

    public static function getGloballySearchableAttributes(): array
    {
        return ['title', 'category.title', 'content'];
    }

    public static function getGlobalSearchResultTitle(Model $record): string|Htmlable
    {
        return 'Baza znanja';
    }

    public static function getGlobalSearchResultDetails(Model $record): array
    {
        return [
            'Naslov' => $record->title,
        ];
    }

    public static function getNavigationBadge(): ?string
    {
        return Filament::getTenant()->knowledgeArticles()->count();
    }

    public static function infolist(Infolist $infolist): Infolist
    {
        return parent::infolist($infolist); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make()->schema([
                    TextInput::make('title')
                        ->required()
                        ->label('Naslov'),

                    Select::make('category_id')
                        ->required()
                        ->native(false)
                        ->options(Filament::getTenant()->knowledgeCategories()->get()->pluck('title', 'id'))
                        ->relationship('category', 'title')
                        ->createOptionForm([
                            TextInput::make('title')
                                ->label('Naziv kategorije')
                                ->required()
                                ->columnSpanFull()
                        ])
                        ->createOptionUsing(function (array $data) {
                            $record = Filament::getTenant()->knowledgeCategories()->create([
                                'title' => $data['title']
                            ]);

                            return $record->getKey(); //like this
                        })
                        ->label('Kategorija'),

                    TinyEditor::make('content')
                        ->label('Sadržaj')
                        ->minHeight(600)
                        ->columnSpanFull()
                        ->required(),

                    SpatieMediaLibraryFileUpload::make('attachments')
                        ->collection('knowledge-article')
                        ->multiple()
                        ->downloadable()
                        ->label('Privitci')
                        ->columnSpanFull()
                ])->columns(2),


            ])->columns(2);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\ColorColumn::make('category.color')
                    ->label(''),

                Tables\Columns\TextColumn::make('title')
                    ->label('Naziv')
                    ->description(function (KnowledgeArticle $record) {
                        return $record->category->title;
                    }),

                Tables\Columns\TextColumn::make('userCreated.fullName')
                    ->label('Kreirao')
                    ->description(function (KnowledgeArticle $record) {
                        return $record->created_at->diffForHumans();
                    }),

                Tables\Columns\TextColumn::make('updated_at')
                    ->label('Zadnja izmjena')
                    ->date()
                    ->description(function (KnowledgeArticle $record) {
                        return $record->updated_at->diffForHumans();
                    }),


            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListKnowledgeArticles::route('/'),
            'create' => Pages\CreateKnowledgeArticle::route('/create'),
            'edit' => Pages\EditKnowledgeArticle::route('/{record}/edit'),
            'view' => ViewKnowledgeArticle::route('/{record}'),
        ];
    }
}
